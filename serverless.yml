org: serverlessais
app: klavijointegration
service: klavijointegration

frameworkVersion: '3'

custom:
  klavijo_campaigns: 'klavijo-campaigns-table-${self:provider.stage}'
  klavijo_api: 'pk_62eddd6e696c0f55657837f33ec7ee3c8c'
  wsgi:
    app: app.app

provider:
  name: aws
  runtime: python3.8
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ KlavijoCampaigns, Arn ]
  environment:
    KLAVIJO_CAMPAIGNS: ${self:custom.klavijo_campaigns}

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - httpApi: '*'
  get_advertible:
    handler: crons.get_advertible
    memorySize: 128
    events:
      - schedule: rate(24 hours)
  get_campaigns:
    handler: crons.get_campaigns
    memorySize: 128
    events:
      - schedule: rate(12 hours)

plugins:
  - serverless-wsgi
  - serverless-python-requirements

resources:
  Resources:
    KlavijoCampaigns:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: campaignId
            AttributeType: S
        KeySchema:
          - AttributeName: campaignId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 20
          WriteCapacityUnits: 20
        TableName: ${self:custom.klavijo_campaigns}